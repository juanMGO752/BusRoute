(()=>{"use strict";const e=new class{constructor(){this.URI="/api/routes"}async getRoute(){const e=await fetch(this.URI);return await e.json()}async postRoute(e){const t=await fetch(this.URI,{method:"POST",body:e});await t.json()}async deleteRoute(e){const t=await fetch(`${this.URI}/${e}`,{headers:{"Content-Type":"application/json"},method:"DELETE"}),n=await t.json();console.log(n)}},t=class{async renderRoutes(){const t=await e.getRoute(),n=document.getElementById("despliegue-rutas"),o=document.getElementById("input-autocom-start"),a=document.getElementById("input-autocom-end");document.getElementById("route-maps").innerHTML="",n.innerHTML="";const s=document.createElement("div");s.className="route-buttons-container container",t.forEach((e=>{if(e.collectionKeyPoints.includes(o.value)&&e.collectionKeyPoints.includes(a.value)){const t=document.createElement("div");t.className="container-button",t.innerHTML=`\n                    <a href="#" class="view" _id="${e._id}">${e.company} (${e.tittleRoute})</a>\n                    `,s.appendChild(t)}})),n.appendChild(s),this.clearRouterForm()}async renderAllRoutes(){const t=await e.getRoute(),n=document.getElementById("despliegue-rutas");document.getElementById("route-maps").innerHTML="",n.innerHTML="";const o=document.createElement("div");o.className="route-buttons-container container",t.forEach((e=>{if("ListToRouteStart"!=e.tittleRoute){const t=document.createElement("div");t.className="container-button",t.innerHTML=`\n                    <a class="view" _id="${e._id}">${e.company} (${e.tittleRoute})</a>\n                    `,o.appendChild(t)}})),n.appendChild(o),this.clearRouterForm()}async renderRoutesMaps(t){const n=await e.getRoute(),o=document.getElementById("route-maps");o.innerHTML="";const a=n.find((e=>e._id===t)),s=document.createElement("div"),c=document.createElement("div"),i=document.createElement("ul"),r=document.createElement("div");return i.className="list-rute",s.className="container-title-point",s.innerHTML=`<h2 class="title-route-map">${a.tittleRoute}</h2>`,r.className="container-img-map",r.innerHTML=`${a.iframe}`,i.innerHTML=`<h3>${a.tittleRoute}</h3>`,c.className="container-map container",a.collectionKeyPoints.forEach((e=>{const t=document.createElement("li");t.innerHTML=`\n            ${e}\n            `,i.appendChild(t)})),s.appendChild(i),c.appendChild(s),c.appendChild(r),o.appendChild(c),!1}async autocompletar(t){return(await e.getRoute()).find((e=>"ListToRouteStart"===e.tittleRoute)).collectionRouteStart.filter((e=>e.toLocaleLowerCase().startsWith(t.toLocaleLowerCase())))}clearSuggestions(){document.getElementsByTagName("route-maps").innerHTML="";let e=document.getElementById("routes-end");e.innerHTML="",e=document.getElementById("routes-start"),e.innerHTML=""}clearRouterForm(){document.getElementById("route-form").reset()}renderMessages(e,t){const n=document.createElement("div");n.innerHTML=`<p style="/* background-color: gray; */font-size: 30px;/* display: flex; *//* font-weight: bold; *//* align-self: center; *//* flex-direction: column; *//* flex-wrap: nowrap; *//* align-content: stretch; *//* justify-content: center; *//* align-items: center; */text-align: center;margin: 20px 0;">${t}</p>`,e.appendChild(n),setTimeout((()=>n.remove()),2300)}};document.addEventListener("DOMContentLoaded",(()=>{new t})),document.getElementById("suggestion-form").addEventListener("submit",(e=>{const n=new t,o=document.getElementById("name").value,a=document.getElementById("mail").value,s=document.getElementById("case").value,c=document.getElementById("userMessage").value,i=document.getElementById("suggestion-form");console.log(o,a,s,c);const r=new FormData;r.append("nameUser",o),r.append("emailUser",a),r.append("caseUser",s),r.append("messageUser",c),console.log(r),(new class{constructor(){this.URI="/api/suggestions"}async getSuggestion(){const e=await fetch(this.URI);return await e.json()}async postSuggestion(e){const t=await fetch(this.URI,{method:"POST",body:e});await t.json(),console.log("suggestion saved")}async deleteSuggestion(e){const t=await fetch(`${this.URI}/${e}`,{headers:{"Content-Type":"application/json"},method:"DELETE"}),n=await t.json();console.log(n)}}).postSuggestion(r),e.preventDefault(),i.reset(),n.renderMessages(i,"! Tu sugerencia se envió correctamente, muchas gracias ¡")})),document.getElementById("route-form").addEventListener("submit",(e=>{const n=new t;n.renderRoutes(),e.preventDefault(),n.clearSuggestions()})),document.getElementById("despliegue-rutas").addEventListener("click",(e=>{const n=new t;e.target.classList.contains("view")&&n.renderRoutesMaps(e.target.getAttribute("_id"))})),document.getElementById("input-autocom-start").addEventListener("input",(({target:e})=>{const n=e.value,o=new t,a=document.getElementById("routes-start");a.innerHTML="",n.length&&o.autocompletar(n).then((e=>e.forEach((e=>{const t=document.createElement("li");t.className="suggestions-start",t.innerHTML=`${e}`,a.appendChild(t)}))))})),document.getElementById("input-autocom-end").addEventListener("input",(({target:e})=>{const n=e.value,o=new t,a=document.getElementById("routes-end");a.innerHTML="",n.length&&o.autocompletar(n).then((e=>e.forEach((e=>{const t=document.createElement("li");t.className="suggestions-end",t.innerHTML=`${e}`,a.appendChild(t)})))),a.innerHTML=""})),document.getElementById("route-form").addEventListener("click",(e=>{const t=document.getElementById("routes-end"),n=document.getElementById("routes-start"),o=document.getElementById("input-autocom-start"),a=document.getElementById("input-autocom-end");e.target.classList.contains("suggestions-start")?(o.value=e.target.innerHTML,n.innerHTML=""):e.target.classList.contains("suggestions-end")&&(a.value=e.target.innerHTML,t.innerHTML="")})),document.getElementById("show-all-routes").addEventListener("click",(e=>{(new t).renderAllRoutes()}))})();
//# sourceMappingURL=bundle.js.map