{"version":3,"file":"js/bundle.js","mappings":"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","sources":["webpack://busroute/./frontend/services/RouteService.js","webpack://busroute/./frontend/UI.JS","webpack://busroute/./frontend/app.js","webpack://busroute/./frontend/services/SuggestionService.js"],"sourcesContent":["\r\nclass RouteService {\r\n    constructor(){\r\n        this.URI = '/api/routes'\r\n    }\r\n\r\n    async getRoute(){\r\n        // se realiza la peticion de get con el metodo fetch  la URI que tenemos arriba\r\n        const response = await fetch(this.URI);\r\n        const routes = await response.json();\r\n        return routes;\r\n    }\r\n\r\n    async postRoute(route){\r\n        const response = await fetch(this.URI, {\r\n            method: 'POST',\r\n            body: route,\r\n        })\r\n        const data = await response.json();\r\n    }\r\n\r\n    async deleteRoute(routeId){\r\n        const response = await fetch(`${this.URI}/${routeId}`,{\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n            },\r\n            method: 'DELETE',\r\n        })\r\n        const data = await response.json();\r\n        console.log(data);\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport default RouteService;","import RouteService from \"./services/RouteService\";\r\nconst routeService = new RouteService();\r\n\r\nclass UI {\r\n\r\n    // funcion que pinta las rutas\r\n    async renderRoutes() {\r\n        const routes = await routeService.getRoute();\r\n        const despliegueRutas = document.getElementById('despliegue-rutas');\r\n        const itemsSearcherStart = document.getElementById('input-autocom-start');\r\n        const itemsSearcherEnd = document.getElementById('input-autocom-end');\r\n        const routeMapsContainer = document.getElementById('route-maps'); //** */\r\n        routeMapsContainer.innerHTML = '';//** */\r\n        despliegueRutas.innerHTML = ''\r\n\r\n        const containerNewButtons = document.createElement('div');\r\n        containerNewButtons.className = 'route-buttons-container container';\r\n\r\n        routes.forEach(route => {\r\n            if (route.collectionKeyPoints.includes(itemsSearcherStart.value) && route.collectionKeyPoints.includes(itemsSearcherEnd.value)) {\r\n                const newButton = document.createElement('div');\r\n                newButton.className = 'container-button'\r\n                newButton.innerHTML = `\r\n                    <a href=\"#\" class=\"view\" _id=\"${route._id}\">${route.company} (${route.tittleRoute})</a>\r\n                    `\r\n                containerNewButtons.appendChild(newButton);\r\n            };\r\n\r\n        });\r\n        despliegueRutas.appendChild(containerNewButtons);\r\n        this.clearRouterForm();\r\n    }\r\n\r\n    async renderAllRoutes() {\r\n        const routes = await routeService.getRoute();\r\n        const despliegueRutas = document.getElementById('despliegue-rutas');\r\n        const routeMapsContainer = document.getElementById('route-maps'); //** */\r\n        routeMapsContainer.innerHTML = '';//** */\r\n        despliegueRutas.innerHTML = ''\r\n\r\n        const containerNewButtons = document.createElement('div');\r\n        containerNewButtons.className = 'route-buttons-container container';\r\n\r\n        routes.forEach(route => {\r\n            if (route.tittleRoute != \"ListToRouteStart\") {\r\n                const newButton = document.createElement('div');\r\n                newButton.className = 'container-button'\r\n                newButton.innerHTML = `\r\n                    <a class=\"view\" _id=\"${route._id}\">${route.company} (${route.tittleRoute})</a>\r\n                    `\r\n                containerNewButtons.appendChild(newButton);\r\n            };\r\n\r\n        });\r\n        despliegueRutas.appendChild(containerNewButtons);\r\n        this.clearRouterForm();\r\n        \r\n    }\r\n\r\n    async renderRoutesMaps(idMap) {\r\n        const routes = await routeService.getRoute();\r\n        const routeMapsContainer = document.getElementById('route-maps'); //** */\r\n        routeMapsContainer.innerHTML = '';//** */\r\n\r\n        const objMap = routes.find((route) =>route._id === idMap);\r\n\r\n        \r\n        const containerTitleRoute = document.createElement('div');\r\n        const containerMap = document.createElement('div');//** */\r\n        const lista = document.createElement('ul');//** */\r\n        const imgMap = document.createElement('div');\r\n\r\n        lista.className = 'list-rute';\r\n\r\n        containerTitleRoute.className = 'container-title-point';\r\n        containerTitleRoute.innerHTML =`<h2 class=\"title-route-map\">${objMap.tittleRoute}</h2>`;\r\n\r\n        imgMap.className = 'container-img-map';\r\n        imgMap.innerHTML = `${objMap.iframe}`;\r\n\r\n        lista.innerHTML = `<h3>${objMap.tittleRoute}</h3>`;\r\n\r\n        containerMap.className='container-map container'\r\n        objMap.collectionKeyPoints.forEach((point) =>{\r\n            const itemLista = document.createElement('li');//** */\r\n            itemLista.innerHTML=\r\n            `\r\n            ${point}\r\n            `\r\n            lista.appendChild(itemLista);\r\n        })\r\n        containerTitleRoute.appendChild(lista);\r\n        containerMap.appendChild(containerTitleRoute);\r\n        containerMap.appendChild(imgMap);\r\n\r\n        \r\n        routeMapsContainer.appendChild(containerMap);//** */\r\n        return(false);\r\n    }\r\n\r\n    // funcion del autocompletar, intercepta los datos entrantes con los de la base\r\n    async autocompletar(location) {\r\n        const routes = await routeService.getRoute();\r\n\r\n        const arraysRoutes = routes.find((route) => route.tittleRoute === \"ListToRouteStart\")\r\n        const arrayRoutesStart = arraysRoutes.collectionRouteStart;\r\n\r\n        return arrayRoutesStart.filter(e => {\r\n            return e.toLocaleLowerCase().startsWith(location.toLocaleLowerCase())\r\n        })\r\n\r\n    }\r\n\r\n    clearSuggestions(){\r\n        let mapRoutes = document.getElementsByTagName(\"route-maps\");\r\n        mapRoutes.innerHTML=``;\r\n        let sugerencias = document.getElementById(\"routes-end\");\r\n        sugerencias.innerHTML = ``;\r\n        sugerencias = document.getElementById(\"routes-start\");\r\n        sugerencias.innerHTML = ``;\r\n    }\r\n\r\n\r\n    clearRouterForm() {\r\n        document.getElementById('route-form').reset();\r\n    }\r\n\r\n    renderMessages(objeto, e){ \r\n        const message = document.createElement('div');\r\n        message.innerHTML=`<p style=\"/* background-color: gray; */font-size: 30px;/* display: flex; *//* font-weight: bold; *//* align-self: center; *//* flex-direction: column; *//* flex-wrap: nowrap; *//* align-content: stretch; *//* justify-content: center; *//* align-items: center; */text-align: center;margin: 20px 0;\">${e}</p>`;\r\n        objeto.appendChild(message);\r\n        \r\n        setTimeout( () => message.remove() ,2300)\r\n    }\r\n\r\n}\r\n\r\nexport default UI;","import './styles/app.css';\r\nimport UI from './UI.JS';\r\nimport SuggestionService from './services/SuggestionService';\r\n\r\n\r\n// evento de carga de dom, ejecuta las funciones al cargar loa pagina\r\ndocument.addEventListener('DOMContentLoaded',()=>{\r\n    const ui = new UI();\r\n});\r\n\r\n\r\n\r\n\r\n// captura el evento del formulario de sugerencias y envio a DB\r\ndocument.getElementById('suggestion-form')\r\n    .addEventListener('submit',e =>{\r\n        const ui = new UI();\r\n        const nameUser = document.getElementById(\"name\").value;\r\n        const emailUser = document.getElementById(\"mail\").value;\r\n        const caseUser = document.getElementById(\"case\").value;\r\n        const messageUser = document.getElementById(\"userMessage\").value;\r\n        const suggestionForm = document.getElementById('suggestion-form');\r\n\r\n        console.log(nameUser,emailUser,caseUser,messageUser);\r\n        \r\n        const formData = new FormData();\r\n        formData.append('nameUser', nameUser)\r\n        formData.append('emailUser', emailUser)\r\n        formData.append('caseUser',caseUser)\r\n        formData.append('messageUser',messageUser)\r\n        \r\n        console.log(formData);\r\n\r\n        const suggestionService = new SuggestionService();\r\n        suggestionService.postSuggestion(formData)\r\n\r\n        e.preventDefault();\r\n        suggestionForm.reset();\r\n\r\n        ui.renderMessages(suggestionForm,\"! Tu sugerencia se envió correctamente, muchas gracias ¡\");\r\n\r\n});\r\n\r\n\r\n// captura el evento de envio de los puntos de ruta que el usuario necesita y pinta los mapas\r\n// los cuales crucen ruta con los puntos que fueron enviados\r\ndocument.getElementById('route-form').addEventListener('submit',e =>{\r\n    const ui = new UI();\r\n    ui.renderRoutes()\r\n    e.preventDefault();\r\n    ui.clearSuggestions()\r\n})\r\n\r\n// evento que muestra los mapas de las rutas encontradas\r\ndocument.getElementById('despliegue-rutas').addEventListener('click', e => {\r\n    const ui = new UI();\r\n    if(e.target.classList.contains('view')){\r\n        ui.renderRoutesMaps(e.target.getAttribute('_id'))\r\n    };\r\n});\r\n\r\n// autocompletar del primer punto de ruta\r\ndocument.getElementById('input-autocom-start').addEventListener('input',({target}) =>{\r\n    const data = target.value;\r\n    const ui = new UI();\r\n    const sugerencias = document.getElementById(\"routes-start\")\r\n    sugerencias.innerHTML = ``\r\n    if(data.length){\r\n        const autoComplete = ui.autocompletar(data);\r\n        autoComplete.then(e => e.forEach(location =>{\r\n            const item = document.createElement('li');\r\n            item.className = 'suggestions-start'\r\n            item.innerHTML = `${location}`\r\n            sugerencias.appendChild(item)\r\n        }))\r\n    }\r\n\r\n});\r\n\r\n// autocompletar del segundo punto de ruta\r\ndocument.getElementById('input-autocom-end').addEventListener('input',({target}) =>{\r\n    const data = target.value;\r\n    const ui = new UI();\r\n    const sugerencias = document.getElementById(\"routes-end\");\r\n    \r\n    sugerencias.innerHTML = ``\r\n    if(data.length){\r\n        const autoComplete = ui.autocompletar(data);   \r\n        autoComplete.then(e => e.forEach(location =>{\r\n            const item = document.createElement('li');\r\n            item.className = 'suggestions-end'\r\n            item.innerHTML = `${location}`\r\n            sugerencias.appendChild(item)\r\n        }))\r\n    }\r\n    sugerencias.innerHTML = ``\r\n    \r\n\r\n})\r\n\r\n// captura el click que se hace en el autocompletar y coloca el valor seleccionado\r\ndocument.getElementById(\"route-form\").addEventListener('click', e =>{\r\n    const suggestionsEnd = document.getElementById(\"routes-end\");\r\n    const suggestionsStart = document.getElementById(\"routes-start\");\r\n    const inputRoutesStart = document.getElementById(\"input-autocom-start\");\r\n    const inputRoutesEnd = document.getElementById(\"input-autocom-end\");\r\n\r\n    if(e.target.classList.contains('suggestions-start')){\r\n        inputRoutesStart.value = e.target.innerHTML;\r\n        suggestionsStart.innerHTML= '';\r\n    }else if(e.target.classList.contains('suggestions-end')){\r\n        inputRoutesEnd.value = e.target.innerHTML\r\n        suggestionsEnd.innerHTML= '';\r\n    }\r\n});\r\n\r\ndocument.getElementById(\"show-all-routes\").addEventListener('click', e =>{\r\n    const ui = new UI();\r\n    ui.renderAllRoutes();\r\n});","\r\nclass SuggestionService {\r\n    constructor(){\r\n        this.URI = '/api/suggestions'\r\n    }\r\n\r\n    async getSuggestion(){\r\n        // se realiza la peticion de get con el metodo fetch  la URI que tenemos arriba\r\n        const response = await fetch(this.URI);\r\n        const suggestions = await response.json();\r\n        return suggestions;\r\n    }\r\n\r\n    async postSuggestion(suggestion){\r\n        const response = await fetch(this.URI, {\r\n            method: 'POST',\r\n            body: suggestion,\r\n        })\r\n        const data = await response.json();\r\n        console.log('suggestion saved')\r\n    }\r\n\r\n    async deleteSuggestion(suggestionId){\r\n        const response = await fetch(`${this.URI}/${suggestionId}`,{\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n            },\r\n            method: 'DELETE',\r\n        })\r\n        const data = await response.json();\r\n        console.log(data);\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport default SuggestionService;"],"names":["routeService","constructor","this","URI","getRoute","response","fetch","json","postRoute","route","method","body","deleteRoute","routeId","headers","data","console","log","renderRoutes","routes","despliegueRutas","document","getElementById","itemsSearcherStart","itemsSearcherEnd","innerHTML","containerNewButtons","createElement","className","forEach","collectionKeyPoints","includes","value","newButton","_id","company","tittleRoute","appendChild","clearRouterForm","renderAllRoutes","renderRoutesMaps","idMap","routeMapsContainer","objMap","find","containerTitleRoute","containerMap","lista","imgMap","iframe","point","itemLista","autocompletar","location","collectionRouteStart","filter","e","toLocaleLowerCase","startsWith","clearSuggestions","getElementsByTagName","sugerencias","reset","renderMessages","objeto","message","setTimeout","remove","addEventListener","ui","nameUser","emailUser","caseUser","messageUser","suggestionForm","formData","FormData","append","getSuggestion","postSuggestion","suggestion","deleteSuggestion","suggestionId","preventDefault","target","classList","contains","getAttribute","length","then","item","suggestionsEnd","suggestionsStart","inputRoutesStart","inputRoutesEnd"],"sourceRoot":""}