{"version":3,"file":"js/bundle.js","mappings":"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","sources":["webpack://busroute/./frontend/services/RouteService.js","webpack://busroute/./frontend/UI.JS","webpack://busroute/./frontend/app.js"],"sourcesContent":["\r\nclass RouteService {\r\n    constructor(){\r\n        this.URI = '/api/routes'\r\n    }\r\n\r\n    async getRoute(){\r\n        // se realiza la peticion de get con el metodo fetch  la URI que tenemos arriba\r\n        const response = await fetch(this.URI);\r\n        const routes = await response.json();\r\n        return routes;\r\n    }\r\n\r\n    async postRoute(route){\r\n        const response = await fetch(this.URI, {\r\n            method: 'POST',\r\n            body: route,\r\n        })\r\n        const data = await response.json();\r\n    }\r\n\r\n    async deleteRoute(routeId){\r\n        const response = await fetch(`${this.URI}/${routeId}`,{\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n            },\r\n            method: 'DELETE',\r\n        })\r\n        const data = await response.json();\r\n        console.log(data);\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport default RouteService;","import RouteService from \"./services/RouteService\";\r\nconst routeService = new RouteService();\r\n\r\nclass UI {\r\n\r\n    // funcion que pinta las rutas\r\n    async renderRoutes() {\r\n        const routes = await routeService.getRoute();\r\n        const despliegueRutas = document.getElementById('despliegue-rutas');\r\n        const itemsSearcherStart = document.getElementById('input-autocom-start');\r\n        const itemsSearcherEnd = document.getElementById('input-autocom-end');\r\n\r\n        despliegueRutas.innerHTML = ''\r\n\r\n        const containerNewButtons = document.createElement('div');\r\n        containerNewButtons.className = 'route-buttons-container container';\r\n\r\n        routes.forEach(route => {\r\n            if (route.collectionKeyPoints.includes(itemsSearcherStart.value) && route.collectionKeyPoints.includes(itemsSearcherEnd.value)) {\r\n                const newButton = document.createElement('div');\r\n                newButton.className = 'container-button'\r\n                newButton.innerHTML = `\r\n                    <a href=\"#\" class=\"view\" _id=\"${route._id}\">${route.company} (${route.tittleRoute})</a>\r\n                    `\r\n                containerNewButtons.appendChild(newButton);\r\n            };\r\n\r\n        });\r\n        despliegueRutas.appendChild(containerNewButtons);\r\n        this.clearRouterForm();\r\n    }\r\n\r\n    async renderRoutesMaps(idMap) {\r\n        const routes = await routeService.getRoute();\r\n        const routeMapsContainer = document.getElementById('route-maps'); //** */\r\n\r\n        const objMap = routes.find((route) =>route._id === idMap);\r\n\r\n        routeMapsContainer.innerHTML = '';//** */\r\n        const containerTitleRoute = document.createElement('div');\r\n        const containerMap = document.createElement('div');//** */\r\n        const lista = document.createElement('ul');//** */\r\n        const imgMap = document.createElement('div');\r\n\r\n        lista.className = 'list-rute';\r\n\r\n        containerTitleRoute.className = 'container-title-point';\r\n        containerTitleRoute.innerHTML =`<h2 class=\"title-route-map\">${objMap.tittleRoute}</h2>`;\r\n\r\n        imgMap.className = 'container-img-map';\r\n        imgMap.innerHTML = `${objMap.iframe}`;\r\n\r\n        lista.innerHTML = `<h3>${objMap.tittleRoute}</h3>`;\r\n\r\n        containerMap.className='container-map container'\r\n        objMap.collectionKeyPoints.forEach((point) =>{\r\n            const itemLista = document.createElement('li');//** */\r\n            itemLista.innerHTML=\r\n            `\r\n            ${point}\r\n            `\r\n            lista.appendChild(itemLista);\r\n        })\r\n        containerTitleRoute.appendChild(lista);\r\n        containerMap.appendChild(containerTitleRoute);\r\n        containerMap.appendChild(imgMap);\r\n\r\n        \r\n        \r\n        \r\n        routeMapsContainer.appendChild(containerMap);//** */\r\n    }\r\n\r\n    // funcion del autocompletar, intercepta los datos entrantes con los de la base\r\n    async autocompletar(location) {\r\n        const routes = await routeService.getRoute();\r\n\r\n        const arraysRoutes = routes.find((route) => route.tittleRoute === \"ListToRouteStart\")\r\n        const arrayRoutesStart = arraysRoutes.collectionRouteStart;\r\n\r\n        return arrayRoutesStart.filter(e => {\r\n            return e.toLocaleLowerCase().startsWith(location.toLocaleLowerCase())\r\n        })\r\n\r\n    }\r\n\r\n    clearSuggestions(){\r\n        let mapRoutes = document.getElementById(\"route-maps\");\r\n        mapRoutes.innerHTML=``;\r\n        let sugerencias = document.getElementById(\"routes-end\");\r\n        sugerencias.innerHTML = ``;\r\n        sugerencias = document.getElementById(\"routes-start\");\r\n        sugerencias.innerHTML = ``;\r\n    }\r\n\r\n\r\n    clearRouterForm() {\r\n        document.getElementById('route-form').reset();\r\n\r\n    }\r\n\r\n    renderMessages() { }\r\n\r\n}\r\n\r\nexport default UI;","import './styles/app.css';\r\nimport UI from './UI.JS';\r\n\r\n// evento de carga de dom, ejecuta las funciones al cargar loa pagina\r\ndocument.addEventListener('DOMContentLoaded',()=>{\r\n    const ui = new UI();\r\n});\r\n\r\n\r\n// captura el evento de envio de los puntos de ruta que el usuario necesita y pinta los mapas\r\n// los cuales crucen ruta con los puntos que fueron enviados\r\ndocument.getElementById('route-form')\r\n    .addEventListener('submit',e =>{\r\n        const ui = new UI();\r\n        ui.renderRoutes()\r\n        e.preventDefault();\r\n        ui.clearSuggestions()\r\n})\r\n\r\n// evento que muestra los mapas de las rutas encontradas\r\ndocument.getElementById('despliegue-rutas').addEventListener('click', e => {\r\n    const ui = new UI();\r\n    if(e.target.classList.contains('view')){\r\n        ui.renderRoutesMaps(e.target.getAttribute('_id'))\r\n    };\r\n});\r\n\r\n// autocompletar del primer punto de ruta\r\ndocument.getElementById('input-autocom-start').addEventListener('input',({target}) =>{\r\n    const data = target.value;\r\n    const ui = new UI();\r\n    const sugerencias = document.getElementById(\"routes-start\")\r\n    sugerencias.innerHTML = ``\r\n    if(data.length){\r\n        const autoComplete = ui.autocompletar(data);\r\n        autoComplete.then(e => e.forEach(location =>{\r\n            const item = document.createElement('li');\r\n            item.className = 'suggestions-start'\r\n            item.innerHTML = `${location}`\r\n            sugerencias.appendChild(item)\r\n        }))\r\n    }\r\n\r\n});\r\n\r\n// autocompletar del segundo punto de ruta\r\ndocument.getElementById('input-autocom-end').addEventListener('input',({target}) =>{\r\n    const data = target.value;\r\n    const ui = new UI();\r\n    const sugerencias = document.getElementById(\"routes-end\");\r\n    \r\n    sugerencias.innerHTML = ``\r\n    if(data.length){\r\n        const autoComplete = ui.autocompletar(data);   \r\n        autoComplete.then(e => e.forEach(location =>{\r\n            const item = document.createElement('li');\r\n            item.className = 'suggestions-end'\r\n            item.innerHTML = `${location}`\r\n            sugerencias.appendChild(item)\r\n        }))\r\n    }\r\n    sugerencias.innerHTML = ``\r\n    \r\n\r\n})\r\n\r\n// captura el click que se hace en el autocompletar y coloca el valor seleccionado\r\ndocument.getElementById(\"route-form\").addEventListener('click', e =>{\r\n    const suggestionsEnd = document.getElementById(\"routes-end\");\r\n    const suggestionsStart = document.getElementById(\"routes-start\");\r\n    const inputRoutesStart = document.getElementById(\"input-autocom-start\");\r\n    const inputRoutesEnd = document.getElementById(\"input-autocom-end\");\r\n\r\n    if(e.target.classList.contains('suggestions-start')){\r\n        inputRoutesStart.value = e.target.innerHTML;\r\n        suggestionsStart.innerHTML= '';\r\n    }else if(e.target.classList.contains('suggestions-end')){\r\n        inputRoutesEnd.value = e.target.innerHTML\r\n        suggestionsEnd.innerHTML= '';\r\n    }\r\n})"],"names":["routeService","constructor","this","URI","getRoute","response","fetch","json","postRoute","route","method","body","deleteRoute","routeId","headers","data","console","log","renderRoutes","routes","despliegueRutas","document","getElementById","itemsSearcherStart","itemsSearcherEnd","innerHTML","containerNewButtons","createElement","className","forEach","collectionKeyPoints","includes","value","newButton","_id","company","tittleRoute","appendChild","clearRouterForm","renderRoutesMaps","idMap","routeMapsContainer","objMap","find","containerTitleRoute","containerMap","lista","imgMap","iframe","point","itemLista","autocompletar","location","collectionRouteStart","filter","e","toLocaleLowerCase","startsWith","clearSuggestions","sugerencias","reset","renderMessages","addEventListener","ui","preventDefault","target","classList","contains","getAttribute","length","then","item","suggestionsEnd","suggestionsStart","inputRoutesStart","inputRoutesEnd"],"sourceRoot":""}